// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VoucherStatus {
  VALID
  INVALID
  USED
}

model Voucher {
  id           Int            @id @default(autoincrement())
  name         String
  images       String[]
  value        Float
  description  String
  brandId      Int[]
  status       VoucherStatus  @default(VALID)
  startTime    DateTime
  endTime      DateTime
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  voucherLine  voucherLine[]
  voucherTrans voucherTrans[]
}

model voucherLine {
  id        Int           @id @default(autoincrement())
  voucherId Int
  userId    Int
  qr_code   String
  status    VoucherStatus @default(VALID)
  voucher   Voucher       @relation(fields: [voucherId], references: [id], onDelete: Cascade)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @default(now()) @updatedAt
}

model voucherTrans {
  id        Int      @id @default(autoincrement())
  voucherId Int
  from_user Int
  to_user   Int
  voucher   Voucher  @relation(fields: [voucherId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
